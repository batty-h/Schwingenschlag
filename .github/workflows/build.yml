# Name des Workflows
name: Cordova iOS Build

# Wann soll der Workflow ausgelöst werden?
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Definition der Jobs, die ausgeführt werden sollen
jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout Code
      # Holt den Code aus dem Repository
      uses: actions/checkout@v4

    - name: Install Node.js
      # Richtet Node.js ein, was für Cordova benötigt wird
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Cordova CLI and cordova-res
      # Installiert die Cordova-Befehlszeilen-Tools und cordova-res global
      run: npm install -g cordova cordova-res

    - name: Install Dependencies
      # Installiert die Abhängigkeiten deines Projekts
      run: npm install

    - name: Clean iOS Platform
      # Entfernt den vorhandenen iOS-Plattform-Ordner für einen sauberen Start
      run: |
        if [ -d "platforms/ios" ]; then
          cordova platform remove ios
        fi
      
    - name: Add Cordova iOS Platform
      # Fügt die iOS-Plattform wieder hinzu
      run: cordova platform add ios --no-fetch
      
    - name: Generate and Copy Icons/Splashscreens
      # Führt cordova-res aus, um die Ressourcen zu generieren.
      run: cordova-res ios --copy

    - name: Cordova iOS Build
      # Führt den Cordova-Build-Befehl für die iOS-Plattform aus
      run: cordova build ios --emulator --release
      
    - name: Upload iOS App as Artifact
      # Lädt die App-Datei als Artefakt hoch, indem der korrekte, spezifische Pfad verwendet wird.
      run: |
        if [ -d "platforms/ios/build/Release-iphonesimulator" ]; then
          echo "Found build directory. Uploading artifact."
          artifact_path="platforms/ios/build/Release-iphonesimulator/Schwingenschlag-Punkte.app"
          if [ -f "$artifact_path" ]; then
             echo "Found app file. Uploading..."
             # Use the correct action to upload the artifact.
             # Note: This is a placeholder for the actual upload-artifact action.
             # The next step should be the actual upload-artifact action.
          else
             echo "App file not found at $artifact_path. Listing directory contents for debugging:"
             ls -R platforms/ios/build/Release-iphonesimulator/
          fi
        else
          echo "Build directory 'platforms/ios/build/Release-iphonesimulator' not found. This indicates a previous build failure."
        fi
      # Der eigentliche Upload-Schritt, korrigiert
      - name: Upload iOS App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-build
          path: platforms/ios/build/Release-iphonesimulator/Schwingenschlag-Punkte.app
